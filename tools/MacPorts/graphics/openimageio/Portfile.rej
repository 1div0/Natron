***************
*** 2,19 ****
  
  PortSystem              1.0
  PortGroup               github 1.0
- PortGroup               qt5 1.0
  PortGroup               cmake 1.1
  PortGroup               active_variants 1.1
  PortGroup               compiler_blacklist_versions 1.0
  PortGroup               boost 1.0
  
- github.setup            OpenImageIO oiio 2.1.20.0 v
- revision                2
- checksums               rmd160  d10c488b93ab2335d53545d8a1b35ba4c1babb98 \
-                         sha256  75222543286d3a12473aa03fdb4e6c9f98760c5ad1ad89d3cf82a5da41385ae0 \
-                         size    29115990
- 
  name                    openimageio
  categories              graphics
  license                 BSD
--- 2,15 ----
  
  PortSystem              1.0
  PortGroup               github 1.0
+ #PortGroup               qt5 1.0
  PortGroup               cmake 1.1
  PortGroup               active_variants 1.1
  PortGroup               compiler_blacklist_versions 1.0
  PortGroup               boost 1.0
  
+ github.setup            OpenImageIO oiio 2.3.16.0 v
+ revision                100
  name                    openimageio
  categories              graphics
  license                 BSD
***************
*** 49,68 ****
                          port:bzip2 \
                          port:libpng \
                          port:tiff \
-                         port:ilmbase \
                          port:openexr \
                          port:squish \
                          port:libfmt
  
  # optional components
  
- #configure.args-append   -DUSE_OPENGL=OFF \
- #                        -DUSE_QT=OFF
- qt5.min_version         5.6
  
  configure.args-append   -DUSE_PYTHON=OFF
  
- set pythons_suffixes    {27 36 37 38 39}
  
  set pythons_ports       {}
  foreach s ${pythons_suffixes} {
--- 53,140 ----
                          port:bzip2 \
                          port:libpng \
                          port:tiff \
                          port:openexr \
                          port:squish \
                          port:libfmt
  
  # optional components
  
+ # we need gcc atomics (clang >= 3.5 maybe?, gcc >= 4.8 works)
+ # tested with openimageio 1.4.6rc1:
+ # macports-clang-3.3 and later work
+ # gcc-4.2 doesn't work
+ # llvm-gcc-4.2 doesn't work
+ # macports-clang < 3.3 untested
+ # clang < 300 doesn't work
+ # see also https://github.com/OpenImageIO/oiio/issues/1363
+ compiler.blacklist-append {*gcc-3*} {*gcc-4.[0-1]} {macports-gcc-4.[2-7]} {gcc-4.[2-7]} {apple-gcc-4.[2-7]} cc {clang < 300}
+ 
+ # for some reason, if we compile oiio with gcc 4.9 and boost with gcc 4.2, idiff a.png b.png crashes
+ if {${configure.cxx_stdlib} eq "libstdc++"} {
+     if {[vercmp $xcodeversion 3.0] >= 0} {
+         compiler.fallback-append macports-clang-3.4
+     } else {
+         compiler.fallback-append macports-clang-3.3
+     }
+ }
+ 
+ # GCC < 4.9 does not have proper GCC intrinsics support
+ compiler.blacklist-append {*gcc-4.8}
+ #compiler.whitelist-append macports-clang-9.0 macports-clang-8.0 macports-clang-7.0 macports-clang-6.0 macports-clang-5.0 macports-clang-4.0 macports-gcc-7 macports-gcc-6 macports-gcc-5 {*gcc-4.9}
+ 
+ # The PowerPC build requires GCC >= 4.9, which doesn't recognize the -arch flag, and requires libatomic
+ # Unfortunately, the resulting binaries don't work (at least on PPC), so we build without threads
+ if {${configure.build_arch} eq "ppc" || ${configure.build_arch} eq "ppc64"} {
+     # there is no known working clang compiler for ppc
+     compiler.blacklist-append {macports-clang*}
+ #    # the following removes the flag "-arch ppc" put by cmake-1.0 portgroup in the pre-configure phase
+ #    pre-configure {
+ #        configure.args-delete -DCMAKE_OSX_ARCHITECTURES="${configure.build_arch}"
+ #    }
+ #    ## -latomic is necessary on ppc for __atomic_fetch_add_8 and __atomic_exchange_8
+ #    configure.args-append -DCMAKE_SHARED_LINKER_FLAGS=-latomic -DCMAKE_EXE_LINKER_FLAGS=-latomic
+     # env PATH=/opt/local/libexec/qt4/bin:$PATH cmake .. -DNOTHREADS=ON -DCMAKE_BUILD_TYPE=Debug -DSTOP_ON_WARNING=OFF
+     configure.args-append -DNOTHREADS=ON -DSTOP_ON_WARNING=OFF
+     ## uncomment the following to compile with buggy thread support
+     # env PATH=/opt/local/libexec/qt4/bin:$PATH cmake .. -DCMAKE_C_COMPILER=gcc-mp-4.9 -DCMAKE_CXX_COMPILER=g++-mp-4.9 -DCMAKE_SHARED_LINKER_FLAGS=-latomic -DCMAKE_EXE_LINKER_FLAGS=-latomic -DCMAKE_BUILD_TYPE=Debug -DSTOP_ON_WARNING=OFF
+     ## -latomic is necessary on ppc for __atomic_fetch_add_8 and __atomic_exchange_8
+     #configure.args-append -DCMAKE_SHARED_LINKER_FLAGS=-latomic -DCMAKE_EXE_LINKER_FLAGS=-latomic
+ }
+ 
+ configure.args-append \
+     -DOIIO_BUILD_TESTS:BOOL=FALSE \
+     -DBOOST_ROOT=${prefix} \
+     -DUSE_QT:BOOL=FALSE \
+     -DUSE_PYTHON:BOOL=FALSE \
+     -DUSE_PYTHON3:BOOL=FALSE \
+     -DUSE_FIELD3D:BOOL=FALSE \
+     -DUSE_FFMPEG:BOOL=FALSE \
+     -DUSE_OPENJPEG:BOOL=FALSE \
+     -DUSE_OCIO:BOOL=FALSE \
+     -DUSE_OPENCV:BOOL=FALSE \
+     -DUSE_OPENSSL:BOOL=FALSE \
+     -DUSE_FREETYPE:BOOL=FALSE \
+     -DUSE_GIF:BOOL=TRUE \
+     -DUSE_HEIF:BOOL=TRUE \
+     -DUSE_PTEX:BOOL=FALSE \
+     -DUSE_LIBRAW:BOOL=TRUE \
+     -DUSE_OPENGL:BOOL=FALSE \
+     -DUSE_WEBP:BOOL=TRUE \
+     -DBUILD_FMT_FORCE:BOOL=TRUE \
+     -DSTOP_ON_WARNING:BOOL=FALSE
+ 
+ # optional components
+ 
+ default_variants    +opencolorio +openjpeg +freetype
+ 
+ variant natron conflicts ffmpeg qt5 dicom openvdb ptex dicom requires opencolorio openjpeg freetype description {Natron version} {
+     if {${configure.cxx_stdlib} eq "libstdc++"} {
+     }
+ }
  
  configure.args-append   -DUSE_PYTHON=OFF
  
+ set pythons_suffixes    {27 36 37 38 39 310}
  
  set pythons_ports       {}
  foreach s ${pythons_suffixes} {
